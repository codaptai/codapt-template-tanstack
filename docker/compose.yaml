services:
  redis:
    image: redis:7
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: app
    shm_size: 512MB

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - htpasswd-data:/etc/nginx/.htpasswd
    ports:
      - "${PORT:-8000}:80"
    depends_on:
      - app
      - adminer
      - htpasswd-generator

  htpasswd-generator:
    image: httpd:alpine
    command: >
      sh -c "htpasswd -bc /htpasswd/htpasswd admin ${ADMIN_PASSWORD:-admin} &&
             chmod 644 /htpasswd/htpasswd &&
             echo 'Generated htpasswd file with username: admin'"
    volumes:
      - htpasswd-data:/htpasswd
    environment:
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}

  adminer:
    image: adminer:latest
    depends_on:
      - postgres
    configs:
      - source: adminer-index.php
        target: /var/www/html/index.php

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      - redis
      - postgres
      - minio
    command: >
      /usr/bin/tini -- bash -c '
        if [ "$NODE_ENV" = "development" ]; then
          echo "Running in development mode"
          PORT=8001 npm run dev
        else
          echo "Running in production mode"
          PORT=8001 npm run build && npm run start
        fi
      '
    working_dir: /app
    volumes:
      - ../:/app
      - node-modules:/app/node_modules:nocopy
    env_file:
      - ../.env

volumes:
  postgres-data:
  redis-data:
  minio-data:
  htpasswd-data:
  node-modules:

configs:
  adminer-index.php:
    content: |
      <?php

      function adminer_object() {
        class AdminerSoftware extends Adminer\Adminer {
          function permanentLogin($$create = false) {
            return '$ADMINER_PERMANENT_LOGIN_KEY';
          }

          function credentials() {
            // server, username and password for connecting to database
            return array('postgres', 'postgres', 'postgres');
          }

          function database() {
            // database name, will be escaped by Adminer
            return 'app';
          }

          function schemas() {
            return array('public');
          }
        }
        return new AdminerSoftware();
      }

      if (empty($$_COOKIE['adminer_permanent'])) {
        $$_POST['auth'] = [
          'driver'    => 'pgsql',
          'server'    => 'postgres',
          'username'  => 'postgres',
          'password'  => 'postgres',
          'db'        => 'app',
          'permanent' => 1,
        ];
      }

      $$_GET['pgsql'] = 'postgres';
      $$_GET['username'] = 'postgres';
      $$_GET['db'] = 'app';

      include './adminer.php';
